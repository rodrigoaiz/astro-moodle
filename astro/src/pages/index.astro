---
// Frontend principal del sistema educativo
import '../styles/global.css';

const title = "Plataforma Educativa";
const description = "Sistema integrado de aprendizaje con Astro y Moodle";
---

<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{title}</title>
  <meta name="description" content={description}>
  <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
      line-height: 1.6;
      color: #333;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
    }

    .hero {
      text-align: center;
      padding: 4rem 2rem;
      background: rgba(255, 255, 255, 0.95);
      border-radius: 20px;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
      margin-bottom: 3rem;
    }

    .hero h1 {
      font-size: 3.5rem;
      margin-bottom: 1rem;
      background: linear-gradient(135deg, #667eea, #764ba2);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .hero p {
      font-size: 1.25rem;
      color: #666;
      margin-bottom: 2rem;
    }

    .features {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      margin-bottom: 3rem;
    }

    .feature-card {
      background: rgba(255, 255, 255, 0.95);
      padding: 2rem;
      border-radius: 15px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .feature-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }

    .feature-icon {
      font-size: 3rem;
      margin-bottom: 1rem;
    }

    .feature-card h3 {
      font-size: 1.5rem;
      margin-bottom: 1rem;
      color: #333;
    }

    .feature-card p {
      color: #666;
      margin-bottom: 1.5rem;
    }

    .btn {
      display: inline-block;
      padding: 12px 24px;
      background: linear-gradient(135deg, #667eea, #764ba2);
      color: white;
      text-decoration: none;
      border-radius: 8px;
      font-weight: 600;
      transition: all 0.3s ease;
      border: none;
      cursor: pointer;
    }

    .btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 20px rgba(102, 126, 234, 0.4);
    }

    .btn-secondary {
      background: linear-gradient(135deg, #48CAE4, #0077BE);
    }

    .btn-secondary:hover {
      box-shadow: 0 10px 20px rgba(72, 202, 228, 0.4);
    }

    .cta-section {
      text-align: center;
      background: rgba(255, 255, 255, 0.95);
      padding: 3rem 2rem;
      border-radius: 20px;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    }

    .cta-section h2 {
      font-size: 2.5rem;
      margin-bottom: 1rem;
      color: #333;
    }

    .cta-section p {
      font-size: 1.2rem;
      color: #666;
      margin-bottom: 2rem;
    }

    .button-group {
      display: flex;
      gap: 1rem;
      justify-content: center;
      flex-wrap: wrap;
    }

    /* Estilos para el widget de login */
    .auth-widget {
      position: fixed;
      top: 2rem;
      right: 2rem;
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 15px;
      padding: 1.5rem;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
      min-width: 280px;
      z-index: 1000;
      transition: all 0.3s ease;
    }

    .auth-widget.loading {
      opacity: 0.7;
    }

    .login-form {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .login-form input {
      padding: 0.75rem;
      border: 2px solid #e1e5e9;
      border-radius: 8px;
      font-size: 0.9rem;
      transition: border-color 0.3s ease;
    }

    .login-form input:focus {
      outline: none;
      border-color: #667eea;
    }

    .login-form button {
      padding: 0.75rem;
      background: linear-gradient(135deg, #667eea, #764ba2);
      color: white;
      border: none;
      border-radius: 8px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .login-form button:hover {
      transform: translateY(-1px);
      box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
    }

    .login-form button:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }

    .login-form .btn {
      display: inline-block;
      padding: 0.75rem;
      border-radius: 8px;
      font-weight: 600;
      text-decoration: none;
      text-align: center;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-bottom: 0.75rem;
    }

    .login-form .btn-primary {
      background: linear-gradient(135deg, #667eea, #764ba2);
      color: white;
      border: none;
    }

    .login-form .btn-primary:hover {
      transform: translateY(-1px);
      box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
      color: white;
    }

    .login-form .btn-secondary {
      background: #f8f9fa;
      color: #495057;
      border: 1px solid #dee2e6;
    }

    .login-form .btn-secondary:hover {
      background: #e9ecef;
      border-color: #adb5bd;
      transform: translateY(-1px);
    }

    .user-info {
      text-align: center;
    }

    .user-avatar {
      width: 60px;
      height: 60px;
      border-radius: 50%;
      background: linear-gradient(135deg, #667eea, #764ba2);
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.5rem;
      color: white;
      margin: 0 auto 1rem;
      font-weight: bold;
    }

    .user-name {
      font-weight: 600;
      color: #333;
      margin-bottom: 0.5rem;
    }

    .user-email {
      font-size: 0.9rem;
      color: #666;
      margin-bottom: 1rem;
    }

    .logout-btn {
      width: 100%;
      padding: 0.5rem;
      background: #dc3545;
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .logout-btn:hover {
      background: #c82333;
    }

    .error-message {
      color: #dc3545;
      font-size: 0.9rem;
      margin-top: 0.5rem;
      text-align: center;
    }

    .success-message {
      color: #28a745;
      font-size: 0.9rem;
      margin-top: 0.5rem;
      text-align: center;
    }

    @media (max-width: 768px) {
      .auth-widget {
        position: relative;
        top: auto;
        right: auto;
        margin: 2rem auto;
        width: 90%;
        max-width: 300px;
      }

    @media (max-width: 768px) {
      .hero h1 {
        font-size: 2.5rem;
      }

      .container {
        padding: 1rem;
      }

      .button-group {
        flex-direction: column;
        align-items: center;
      }
    }
  </style>
</head>
<body>
  <!-- Widget de Autenticación -->
  <div class="auth-widget" id="authWidget">
    <!-- Login Form (visible cuando no está logueado) -->
    <div class="login-form" id="loginForm" style="display: none;">
      <h3 style="margin-bottom: 1rem; text-align: center; color: #333;">Acceso al Sistema</h3>
      <p style="text-align: center; margin-bottom: 1rem; color: #666; font-size: 0.9rem;">
        Para acceder al sistema, inicia sesión en Moodle
      </p>
      <a href="/learning/login/" class="btn btn-primary" style="width: 100%; text-align: center; text-decoration: none; display: inline-block; margin-bottom: 1rem;">
        Iniciar Sesión en Moodle
      </a>
      <button type="button" id="checkSessionBtn" class="btn btn-secondary" style="width: 100%;">
        Verificar Sesión
      </button>
    </div>

    <!-- User Info (visible cuando está logueado) -->
    <div class="user-info" id="userInfo" style="display: none;">
      <div class="user-avatar" id="userAvatar">U</div>
      <div class="user-name" id="userName">Usuario</div>
      <div class="user-email" id="userEmail">usuario@email.com</div>
      <button class="logout-btn" id="logoutBtn">Cerrar Sesión</button>
    </div>

    <!-- Loading state -->
    <div id="loadingState" style="text-align: center;">
      <p>Verificando sesión...</p>
    </div>
  </div>

  <div class="container">
    <!-- Test Tailwind CSS -->
    <div class="bg-gradient-to-r from-blue-500 to-purple-600 text-white p-4 rounded-lg mb-8 text-center">
      <h2 class="text-2xl font-bold mb-2">🎉 Astro 5 + Tailwind CSS</h2>
      <p class="opacity-90">¡Actualización exitosa! Frontend moderno con Tailwind CSS funcionando.</p>
    </div>

    <!-- Hero Section -->
    <section class="hero">
      <h1>🎓 Plataforma Educativa</h1>
      <p>Sistema integrado de aprendizaje moderno con tecnologías avanzadas</p>
      <p>Astro + Moodle + Docker para una experiencia educativa completa</p>
    </section>

    <!-- Features Section -->
    <section class="features">
      <div class="feature-card">
        <div class="feature-icon">🚀</div>
        <h3>Frontend Moderno</h3>
        <p>Interfaz rápida y responsive desarrollada en Astro para una experiencia de usuario excepcional</p>
        <a href="#" class="btn">Explorar Frontend</a>
      </div>

      <div class="feature-card">
        <div class="feature-icon">📚</div>
        <h3>LMS Completo</h3>
        <p>Moodle 4.3.3 integrado con todas las funcionalidades para gestión de cursos y estudiantes</p>
        <a href="/learning" class="btn btn-secondary">Acceder a Moodle</a>
      </div>

      <div class="feature-card">
        <div class="feature-icon">🔐</div>
        <h3>Autenticación Unificada</h3>
        <p>Sistema de autenticación integrado que conecta el frontend con Moodle de manera transparente</p>
        <a href="/api" class="btn">Ver API</a>
      </div>
    </section>

    <!-- Call to Action -->
    <section class="cta-section">
      <h2>¿Listo para empezar?</h2>
      <p>Accede al sistema de gestión de aprendizaje y comienza tu experiencia educativa</p>

      <div class="button-group">
        <a href="/learning" class="btn btn-secondary">Entrar a Moodle</a>
        <a href="/learning/login/index.php" class="btn">Iniciar Sesión</a>
      </div>
    </section>
  </div>

  <script>
    // TypeScript-compatible JavaScript
    document.addEventListener('DOMContentLoaded', function() {

      // Authentication Widget Functions
      async function checkSession() {
        try {
          const response = await fetch('/api/check-session');
          if (response.ok) {
            const userData = await response.json();
            if (userData.loggedIn) {
              showUserInfo(userData);
            } else {
              showLoginForm();
            }
          } else {
            showLoginForm();
          }
        } catch (error) {
          console.error('Error checking session:', error);
          showLoginForm();
        }
        const loadingState = document.getElementById('loadingState');
        if (loadingState) loadingState.style.display = 'none';
      }

      function showLoginForm() {
        const loginForm = document.getElementById('loginForm');
        const userInfo = document.getElementById('userInfo');
        if (loginForm) loginForm.style.display = 'block';
        if (userInfo) userInfo.style.display = 'none';
      }

      function showUserInfo(userData) {
        const loginForm = document.getElementById('loginForm');
        const userInfo = document.getElementById('userInfo');
        if (loginForm) loginForm.style.display = 'none';
        if (userInfo) userInfo.style.display = 'block';

        // Update user info
        const userNameEl = document.getElementById('userName');
        const userEmailEl = document.getElementById('userEmail');
        const userAvatarEl = document.getElementById('userAvatar');

        if (userNameEl) userNameEl.textContent = userData.user.name;
        if (userEmailEl) userEmailEl.textContent = userData.user.email;
        if (userAvatarEl) userAvatarEl.textContent = userData.user.name.charAt(0).toUpperCase();
      }

      async function logout() {
        try {
          const response = await fetch('/api/logout', {
            method: 'POST',
          });

          if (response.ok) {
            showLoginForm();
          }
        } catch (error) {
          console.error('Logout error:', error);
        }
      }      // Card animation with proper TypeScript types
      const cards = document.querySelectorAll('.feature-card');
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const element = entry.target as HTMLElement;
            element.style.opacity = '1';
            element.style.transform = 'translateY(0)';
          }
        });
      });

      cards.forEach(card => {
        const element = card as HTMLElement;
        element.style.opacity = '0';
        element.style.transform = 'translateY(20px)';
        element.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(card);
      });

      // Event listeners for authentication
      const checkSessionBtn = document.getElementById('checkSessionBtn');
      const logoutBtn = document.getElementById('logoutBtn');

      if (checkSessionBtn) checkSessionBtn.addEventListener('click', checkSession);
      if (logoutBtn) logoutBtn.addEventListener('click', logout);      // Initialize authentication check
      checkSession();
    });
  </script>
</body>
</html>
